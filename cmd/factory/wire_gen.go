// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package factory

import (
	"github.com/TemaKut/messenger-auth/internal/app/config"
	"github.com/TemaKut/messenger-auth/internal/app/handler/grpc/user"
	"github.com/TemaKut/messenger-auth/internal/service/user"
)

// Injectors from wire.go:

func InitApp() (App, func(), error) {
	configConfig := config.NewConfig()
	logger, err := ProvideLogger(configConfig)
	if err != nil {
		return App{}, nil, err
	}
	postgresDb, cleanup, err := ProvidePostgresDb(configConfig, logger)
	if err != nil {
		return App{}, nil, err
	}
	storage := ProvideUserStorage(postgresDb, logger)
	service := userservice.NewService(storage)
	handler := user.NewHandler(service)
	grpcServerProvider, cleanup2, err := ProvideGrpcServer(configConfig, handler, logger)
	if err != nil {
		cleanup()
		return App{}, nil, err
	}
	grpcProvider := ProvideGrpcProvider(grpcServerProvider)
	app, cleanup3 := ProvideApp(logger, grpcProvider)
	return app, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
